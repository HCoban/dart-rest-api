import 'dart:convert';

/// Class encapsulating a [MessagesCount] object.
class MessagesCount {
  /// A link to the endpoint to retrieve messages of this conversation.
  String href;

  /// The total number of messages that can be retrieved through pagination for
  /// this conversation.
  int totalCount;

  /// The unique ID generated by the MessageBird platform that identifies latest
  /// message. This field is only sent for conversation start.
  String lastMessageId;

  /// Constructor.
  MessagesCount({
    this.href,
    this.totalCount,
    this.lastMessageId,
  });

  /// Construct a [MessagesCount] object from a json [String].
  factory MessagesCount.fromJson(String source) {
    final decoded = json.decode(source)['data'];
    if (decoded is List<dynamic> && decoded.length != 1) {
      throw Exception('Tried to decode a single object from a list of '
          'multiple objects. Use function "fromJsonList" instead');
    }
    return MessagesCount.fromMap(
        decoded == null ? json.decode(source) : decoded[0]);
  }

  /// Construct a [MessagesCount] object from a [Map].
  factory MessagesCount.fromMap(Map<String, dynamic> map) => map == null
      ? null
      : MessagesCount(
          href: map['href'].toString(),
          totalCount: int.parse(map['totalCount'].toString()),
          lastMessageId: map['lastMessageId'].toString(),
        );

  /// Get a json [String] representing the [MessagesCount].
  String toJson() => json.encode(toMap());

  /// Convert this object to a [Map].
  Map<String, dynamic> toMap() => {
        'href': href,
        'totalCount': totalCount,
        'lastMessageId': lastMessageId,
      };
}
